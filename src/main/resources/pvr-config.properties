###############################################################
# PVR Configuration Options
###############################################################
colors.background = #FFFFFF
colors.foreground = #000080

window.width = 500
window.height = 300

###############################################################
# Kodi Configuration
###############################################################
#KODI_HOST=192.168.0.21"
KODI_HOST=localhost
KODI_HTTP_PORT=9080
KODI_SOCKET_PORT=9090
#Not exposed
#CLEAN_KODI_DOWNLOAD=false

	
KODI_DOWNLOAD_BASE_DIR="C:\\gitbash\\opt\\kodi\\downloads"
KODI_DOWNLOAD_COMPLETED_DIR="C:\\gitbash\\opt\\kodi\\completed"
KODI_DOWNLOAD_COMPLETED_AMC_DIR="C:\\gitbash\\opt\\kodi\\amccompleted"
KODI_DOWNLOAD_COMPLETED_AMC_TVSHOW_DIR="C:\\gitbash\\opt\\kodi\\amccompleted\\TVShows"
KODI_DOWNLOAD_COMPLETED_AMC_MOVIES_DIR="C:\\gitbash\\opt\\kodi\\amccompleted\\Movies"
	
KODI_DOWNLOAD_TVSHOWS_DIR="C:\\gitbash\\opt\\kodi\\downloads\\tvshows"
KODI_DOWNLOAD_MOVIES_DIR="C:\\gitbash\\opt\\kodi\\downloads\\movies"

KODI_PVR_DOWNLOAD_FILE = "kodi-downloader.csv"
KDOI_PVR_DOWNLOAD_TRACKER="C:/gitbash/opt/kodi/kodi-downloader.csv"
KDOI_PVR_DOWNLOAD_TRACKER_MASTER="C:/gitbash/opt/eclipse/workspace/io.askcloud.pvr/kodi/plugin.video.exodus.updates/kodi-downloader.csv"

DOWNLOAD_STATUS_QUEUED=QUEUED
DOWNLOAD_STATUS_SNATCHED=SNATCHED
	
#This controls the number of shows to pick up per queue.  -1 is All of them
KODI_TVSHOW_QUEUE_BATCH=-1
KODI_MOVIE_QUEUE_BATCH=-1;
	
	
#Threads
#There are places in the multi threaded executions where another thread might be running or there are other tasks going on.
#Set this to true if you are calling the apis standalone, otherwise for AMC it should be false
#
EXIT_JAVA_PROGRAM=false



#Plex TVShow and Movies Directory
PLEX_TVSHOWS_DIR="C:\\Entertainment\\TVShows"
PLEX_MOVIES_DIR="C:\\Entertainment\\Movies"

#Each Kodi Download is done on its own thread.  This specifies the max concurrent downloads 
KODI_DOWNLOAD_THREADS=10
	
#when there are no more downloads to be process then wait 2 mins and check again
KODI_SERIES_MISSING_EPISODES_EMPTY_SLEEP_TIME=120000
	
#While donwloads threads are running the main thread will wait until all downloads are complete or failed/timed out.
#This flag specifies the sleep time for when the active queue progress is serialized to disk
KODI_UPDATING_PROGRESS_SLEEP_TIME=20000
	
#This flag is used to tell the program to continue to run and pick up new requests as they come in.
#This means the program will never end
WAIT_FOR_NEW_REQUESTS_NO_EXIT=false
	
###############################################################
# Filebot Configuration and Groovy Scripts
###############################################################
FILEBOT_FIND_SERIES_MISSING_EPISODES="C:/gitbash/opt/eclipse/workspace/io.askcloud.pvr/scripts/filebot/find-series-episodes-missing.groovy"
FILEBOT_FIND_SERIES_EPISODES_MISSING_EXCLUDES="C:/gitbash/opt/eclipse/workspace/io.askcloud.pvr/scripts/filebot/find-series-episodes-missing-excludes.txt"
FILEBOT_AMC_LOG="C:/gitbash/opt/eclipse/workspace/io.askcloud.pvr/scripts/filebot/amc.log"
FILEBOT_AMC_EXCLUDE_LIST="C:/gitbash/opt/eclipse/workspace/io.askcloud.pvr/scripts/filebot/amc-exclude.txt"
	
FILEBOT_FIND_SERIES_ENDED_EPISODES="C:/gitbash/opt/eclipse/workspace/io.askcloud.pvr/scripts/filebot/find-series-ended.groovy"
FILEBOT_FIND_SERIES_EPISODES_HAVE="C:/gitbash/opt/eclipse/workspace/io.askcloud.pvr/scripts/filebot/find-series-episodes-have.groovy"
	
	
FILEBOT_SERIES_ENDED_EPISODES_FILE="C:\\gitbash\\opt\\eclipse\\workspace\\io.askcloud.pvr\\queue\\series-ended.txt"
FILEBOT_SERIES_EPISODES_HAVE_FILE="C:\\gitbash\\opt\\eclipse\\workspace\\io.askcloud.pvr\\queue\\series-episodes-have.txt"
	
DOWNLOAD_QUEUE_FILE="C:\\gitbash\\opt\\eclipse\\workspace\\io.askcloud.pvr\\queue\\download-queue.txt"
DOWNLOAD_QUEUE_LOCK_FILE="C:\\gitbash\\opt\\eclipse\\workspace\\io.askcloud.pvr\\queue\\download-queue.txt.lock"
DOWNLOAD_QUEUE_ACTIVE_FILE="C:\\gitbash\\opt\\eclipse\\workspace\\io.askcloud.pvr\\queue\\download-queue-active.txt"
DOWNLOAD_QUEUE_ACTIVE_FILE_LOCK="C:\\gitbash\\opt\\eclipse\\workspace\\io.askcloud.pvr\\queue\\download-queue-active.txt.lock"
		
FILE_BOT_EXE="C:\\gitbash\\opt\\filebot\\filebot.exe"
	
BC_PUSH_AMC_TO_PLEX_BAT="C:\\gitbash\\opt\\eclipse\\workspace\\io.askcloud.pvr\\scripts\\bc\\push-amc-to-plex.bat"
BC_VALIDATE_AMC_READY_FOR_PLEX_BAT="C:\\gitbash\\opt\\eclipse\\workspace\\io.askcloud.pvr\\scripts\\bc\\report-amc.bat"
	
#This will run the entire download job and validate it at the end but not push the downloads to plex
PUBLISH_TO_PLEX=false
	
LOGS_DIRECTORY = "C:\\gitbash\\opt\\eclipse\\workspace\\io.askcloud.pvr\\logs"
LOGS_ARCHIVES_DIRECTORY="C:\\gitbash\\opt\\eclipse\\workspace\\io.askcloud.pvr\\logs\\archives"
BEYOND_COMPARE_AMC_MOVIE_REPORT_FILE="C:\\gitbash\\opt\\eclipse\\workspace\\io.askcloud.pvr\\logs\\report-amc-movie.xml"
BEYOND_COMPARE_AMC_TV_REPORT_FILE = "C:\\gitbash\\opt\\eclipse\\workspace\\io.askcloud.pvr\\logs\\report-amc-tv.xml";
	

#When updating the active queue (download-queue-active.txt) file there is a wait interval 
#to support multiple machines dowing the download using the same queue
#This wait is the time period to wait until the lock is removed so the current downloader can load the download-queue-active.txt
#is already updating it.  In the case where there is on 
QUEUE_LOCK_FILE_WAIT_TIME=10000
	
#WKodi Exodus Clear Cache Wait time for the thread so the cache can be completely cleared before continuing.
CLEAR_CACHE_THREAD_WAIT_TIME=10000
	
KODI_MONITOR_DOWNLOAD_PERCENTAGE_CSV_FILE_LOADER=10000
	
KODI_EXODUS_DOWNLOAD_MONITOR_THREAD_WAIT_TIME=20000
	

#The download is considered stuck if it reaches 4 minutes without any progress updates
#
#4 Minutes is determined by the KODI_EXODUS_DOWNLOAD_ITERATOR_COUNTER_HUNG * KODI_EXODUS_DOWNLOAD_MONITOR_THREAD_WAIT_TIME (seconds)
#i.e. 20 iterations of 20 seconds (KODI_EXODUS_DOWNLOAD_MONITOR_THREAD_WAIT_TIME)
#
KODI_EXODUS_DOWNLOAD_ITERATOR_COUNTER_HUNG=20; 
	
